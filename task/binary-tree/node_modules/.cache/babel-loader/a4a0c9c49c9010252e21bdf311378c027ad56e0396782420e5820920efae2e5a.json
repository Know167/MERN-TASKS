{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\Stack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stack() {\n  _s();\n  useEffect(() => {\n    function Node(value) {\n      this.value = value;\n      // this.left = null;\n      // this.right = null;\n    }\n\n    function insertNode(Tree, value) {\n      var node = Tree,\n        key;\n      while (node.value !== value) {\n        key = value < node.value ? \"left\" : \"right\";\n        if (!node[key]) {\n          node[key] = new Node(value);\n          break;\n        }\n        node = node[key];\n      }\n      return Tree;\n    }\n    function traverse(node) {\n      if (props.node !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"20px\",\n              height: \"20px\",\n              marginLeft: \"50%\",\n              marginBottom: \"7px\",\n              border: \"2px solid black\",\n              borderRadius: \"5px\"\n            },\n            children: props.node.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Traverse, {\n                node: props.node.left\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Traverse, {\n                node: props.node.right\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this);\n      }\n    }\n    var array = [8, 10, 12, 5, 3, 6];\n    var Tree = array.reduce((t, v) => t ? insertNode(t, v) : new Node(v), null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Stack, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Stack;\nexport default Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Stack","_s","Node","value","insertNode","Tree","node","key","traverse","props","children","style","width","height","marginLeft","marginBottom","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","marginRight","Traverse","left","right","array","reduce","t","v","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/Stack.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\n\r\nfunction Stack() {\r\n\r\n    useEffect(() => {\r\n       function Node(value) {\r\n         this.value = value;\r\n         // this.left = null;\r\n         // this.right = null;\r\n       }\r\n\r\n       function insertNode(Tree, value) {\r\n         var node = Tree,\r\n           key;\r\n         while (node.value !== value) {\r\n           key = value < node.value ? \"left\" : \"right\";\r\n           if (!node[key]) {\r\n             node[key] = new Node(value);\r\n             break;\r\n           }\r\n           node = node[key];\r\n         }\r\n         return Tree;\r\n        }\r\n        function traverse(node) {\r\n            if (props.node !== null) {\r\n              return (\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"50%\",\r\n                      marginBottom: \"7px\",\r\n                      border: \"2px solid black\",\r\n                      borderRadius: \"5px\",\r\n                    }}>\r\n                    {props.node.value}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-evenly\",\r\n                    }}>\r\n                    <div style={{ marginRight: \"5px\" }}>\r\n                      <Traverse node={props.node.left} />\r\n                    </div>\r\n                    <div>\r\n                      <Traverse node={props.node.right} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n        }\r\n\r\n        var array = [8, 10, 12, 5, 3, 6];\r\n         var Tree = array.reduce(\r\n           (t, v) => (t ? insertNode(t, v) : new Node(v)),\r\n           null\r\n         )\r\n    \r\n      \r\n    }, [])\r\n    \r\n    return (\r\n    <div>\r\n      \r\n    </div>\r\n  \r\n        \r\n  )\r\n}\r\n\r\nexport default Stack\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}