{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\Stack.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stack() {\n  _s();\n  useEffect(() => {\n    function Node(value) {\n      this.value = value;\n      // this.left = null;\n      // this.right = null;\n    }\n\n    function insertNode(tree, value) {\n      var node = Tree,\n        key;\n      while (node.value !== value) {\n        key = value < node.value ? \"left\" : \"right\";\n        if (!node[key]) {\n          node[key] = new Node(value);\n          break;\n        }\n        node = node[key];\n      }\n      return tree;\n    }\n    var array = [8, 10, 12, 5, 3, 6],\n      Tree = array.reduce((t, v) => t ? insertNode(t, v) : new Node(v), null);\n    console.log(Tree);\n    return () => {\n      second;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Stack, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Stack;\nexport default Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Stack","_s","useEffect","Node","value","insertNode","tree","node","Tree","key","array","reduce","t","v","console","log","second","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/Stack.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Stack() {\r\n\r\n    useEffect(() => {\r\n       function Node(value) {\r\n         this.value = value;\r\n         // this.left = null;\r\n         // this.right = null;\r\n       }\r\n\r\n       function insertNode(tree, value) {\r\n         var node = Tree,\r\n           key;\r\n         while (node.value !== value) {\r\n           key = value < node.value ? \"left\" : \"right\";\r\n           if (!node[key]) {\r\n             node[key] = new Node(value);\r\n             break;\r\n           }\r\n           node = node[key];\r\n         }\r\n         return tree;\r\n       }\r\n\r\n       var array = [8, 10, 12, 5, 3, 6],\r\n         Tree = array.reduce(\r\n           (t, v) => (t ? insertNode(t, v) : new Node(v)),\r\n           null\r\n         );\r\n\r\n       console.log(Tree);\r\n    \r\n      return () => {\r\n        second\r\n      }\r\n    }, [])\r\n    \r\n    return (\r\n    <div>\r\n      \r\n    </div>\r\n  \r\n        \r\n  )\r\n}\r\n\r\nexport default Stack\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEbC,SAAS,CAAC,MAAM;IACb,SAASC,IAAIA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB;MACA;IACF;;IAEA,SAASC,UAAUA,CAACC,IAAI,EAAEF,KAAK,EAAE;MAC/B,IAAIG,IAAI,GAAGC,IAAI;QACbC,GAAG;MACL,OAAOF,IAAI,CAACH,KAAK,KAAKA,KAAK,EAAE;QAC3BK,GAAG,GAAGL,KAAK,GAAGG,IAAI,CAACH,KAAK,GAAG,MAAM,GAAG,OAAO;QAC3C,IAAI,CAACG,IAAI,CAACE,GAAG,CAAC,EAAE;UACdF,IAAI,CAACE,GAAG,CAAC,GAAG,IAAIN,IAAI,CAACC,KAAK,CAAC;UAC3B;QACF;QACAG,IAAI,GAAGA,IAAI,CAACE,GAAG,CAAC;MAClB;MACA,OAAOH,IAAI;IACb;IAEA,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9BF,IAAI,GAAGE,KAAK,CAACC,MAAM,CACjB,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,GAAGP,UAAU,CAACO,CAAC,EAAEC,CAAC,CAAC,GAAG,IAAIV,IAAI,CAACU,CAAC,CAAE,EAC9C,IAAI,CACL;IAEHC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IAElB,OAAO,MAAM;MACXQ,MAAM;IACR,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAjB,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAIV;AAACnB,EAAA,CA3CQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA6Cd,eAAeA,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}