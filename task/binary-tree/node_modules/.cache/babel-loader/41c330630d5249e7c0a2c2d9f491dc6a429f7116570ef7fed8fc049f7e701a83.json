{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\Stack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stack() {\n  _s();\n  //   function traverse(node) {\n  //     console.log(node);\n  if (node !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20px\",\n          height: \"20px\",\n          marginLeft: \"50%\",\n          marginBottom: \"7px\",\n          border: \"2px solid black\",\n          borderRadius: \"5px\"\n        },\n        children: node.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: \"5px\"\n          },\n          children: traverse(node.left)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: traverse(node.right)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  }\n  //   }\n  useEffect(() => {\n    function Node(value) {\n      this.value = value;\n      // this.left = null;\n      // this.right = null;\n    }\n\n    function insertNode(Tree, value) {\n      var node = Tree,\n        key;\n      while (node.value !== value) {\n        key = value < node.value ? \"left\" : \"right\";\n        if (!node[key]) {\n          node[key] = new Node(value);\n          break;\n        }\n        node = node[key];\n      }\n      return Tree;\n    }\n    var array = [8, 10, 12, 5, 3, 6];\n    var Tree = array.reduce((t, v) => t ? insertNode(t, v) : new Node(v), null);\n  }, []);\n}\n_s(Stack, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Stack;\nexport default Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Stack","_s","node","children","style","width","height","marginLeft","marginBottom","border","borderRadius","value","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","marginRight","traverse","left","right","Node","insertNode","Tree","key","array","reduce","t","v","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/Stack.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Stack() {\r\n//   function traverse(node) {\r\n//     console.log(node);\r\n    if (node !== null) {\r\n      return (\r\n        <div>\r\n          <div\r\n            style={{\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              marginLeft: \"50%\",\r\n              marginBottom: \"7px\",\r\n              border: \"2px solid black\",\r\n              borderRadius: \"5px\",\r\n            }}>\r\n            {node.value}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-evenly\",\r\n            }}>\r\n            <div style={{ marginRight: \"5px\" }}>{traverse(node.left)}</div>\r\n            <div>{traverse(node.right)}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n//   }\r\n  useEffect(() => {\r\n    function Node(value) {\r\n      this.value = value;\r\n      // this.left = null;\r\n      // this.right = null;\r\n    }\r\n\r\n    function insertNode(Tree, value) {\r\n      var node = Tree,\r\n        key;\r\n      while (node.value !== value) {\r\n        key = value < node.value ? \"left\" : \"right\";\r\n        if (!node[key]) {\r\n          node[key] = new Node(value);\r\n          break;\r\n        }\r\n        node = node[key];\r\n      }\r\n      return Tree;\r\n    }\r\n\r\n    var array = [8, 10, 12, 5, 3, 6];\r\n    var Tree = array.reduce(\r\n      (t, v) => (t ? insertNode(t, v) : new Node(v)),\r\n      null\r\n    );\r\n  }, []);\r\n}\r\n\r\nexport default Stack;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA;EACI,IAAIC,IAAI,KAAK,IAAI,EAAE;IACjB,oBACEH,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QACEK,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,UAAU,EAAE,KAAK;UACjBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,iBAAiB;UACzBC,YAAY,EAAE;QAChB,CAAE;QAAAP,QAAA,EACDD,IAAI,CAACS;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACNhB,OAAA;QACEK,KAAK,EAAE;UACLY,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE;QAClB,CAAE;QAAAf,QAAA,gBACFJ,OAAA;UAAKK,KAAK,EAAE;YAAEe,WAAW,EAAE;UAAM,CAAE;UAAAhB,QAAA,EAAEiB,QAAQ,CAAClB,IAAI,CAACmB,IAAI;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC/DhB,OAAA;UAAAI,QAAA,EAAMiB,QAAQ,CAAClB,IAAI,CAACoB,KAAK;QAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAEV;EACJ;EACEnB,SAAS,CAAC,MAAM;IACd,SAAS2B,IAAIA,CAACZ,KAAK,EAAE;MACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB;MACA;IACF;;IAEA,SAASa,UAAUA,CAACC,IAAI,EAAEd,KAAK,EAAE;MAC/B,IAAIT,IAAI,GAAGuB,IAAI;QACbC,GAAG;MACL,OAAOxB,IAAI,CAACS,KAAK,KAAKA,KAAK,EAAE;QAC3Be,GAAG,GAAGf,KAAK,GAAGT,IAAI,CAACS,KAAK,GAAG,MAAM,GAAG,OAAO;QAC3C,IAAI,CAACT,IAAI,CAACwB,GAAG,CAAC,EAAE;UACdxB,IAAI,CAACwB,GAAG,CAAC,GAAG,IAAIH,IAAI,CAACZ,KAAK,CAAC;UAC3B;QACF;QACAT,IAAI,GAAGA,IAAI,CAACwB,GAAG,CAAC;MAClB;MACA,OAAOD,IAAI;IACb;IAEA,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,IAAIF,IAAI,GAAGE,KAAK,CAACC,MAAM,CACrB,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,GAAGL,UAAU,CAACK,CAAC,EAAEC,CAAC,CAAC,GAAG,IAAIP,IAAI,CAACO,CAAC,CAAE,EAC9C,IAAI,CACL;EACH,CAAC,EAAE,EAAE,CAAC;AACR;AAAC7B,EAAA,CAzDQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA2Dd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}