{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\BinaryTree.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Traverse from \"./Traverse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryTree() {\n  _s();\n  const [tree, setTree] = useState({\n    value: null,\n    left: null,\n    right: null\n  });\n  const [inputVal, setInputVal] = useState(\"\");\n  function insert(value) {\n    const newNode = {\n      left: null,\n      value: value,\n      right: null\n    };\n    if (tree.value === null) {\n      setTree(prevTree => {\n        return {\n          ...prevTree,\n          value: value\n        };\n      });\n      return;\n    }\n    let currentNode = tree;\n    while (true) {\n      if (value < currentNode.value) {\n        if (currentNode.left == null) {\n          currentNode.left = newNode;\n          break;\n        }\n        currentNode = currentNode.left;\n        continue;\n      } else {\n        if (value === currentNode.value) {\n          break;\n        } else {\n          if (currentNode.right == null) {\n            currentNode.right = newNode;\n            break;\n          }\n          currentNode = currentNode.right;\n          continue;\n        }\n      }\n    }\n    setTree(tree);\n  }\n  useEffect(() => {\n    insert(5);\n    insert(2);\n    insert(3);\n    // insert(4);\n    insert(-5);\n    insert(6);\n    // insert(-3);\n    // insert(-6);\n\n    // insert(-7)\n    // insert(8);\n    console.log(tree);\n  }, [tree]);\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    insert(Number(inputVal));\n    setInputVal(\"\");\n    console.log(tree);\n  }\n  function onChangeHandler(event) {\n    setInputVal(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Traverse, {\n      node: tree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryTree, \"71sFcdaiUO1IPGDmo1YLUmLe66s=\");\n_c = BinaryTree;\nexport default BinaryTree;\nvar _c;\n$RefreshReg$(_c, \"BinaryTree\");","map":{"version":3,"names":["useState","useEffect","Traverse","jsxDEV","_jsxDEV","BinaryTree","_s","tree","setTree","value","left","right","inputVal","setInputVal","insert","newNode","prevTree","currentNode","console","log","onSubmitHandler","event","preventDefault","Number","onChangeHandler","target","children","node","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/BinaryTree.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Traverse from \"./Traverse\";\r\n\r\nfunction BinaryTree() {\r\n  const [tree, setTree] = useState({\r\n    value: null,\r\n    left: null,\r\n    right: null,\r\n  });\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n\r\n  function insert(value) {\r\n    const newNode = {\r\n      left: null,\r\n      value: value,\r\n      right: null,\r\n    };\r\n\r\n    if (tree.value === null) {\r\n      setTree((prevTree) => { return { ...prevTree, value: value } });\r\n      return;\r\n    }\r\n    let currentNode = tree;\r\n\r\n    while (true) {\r\n      if (value < currentNode.value) {\r\n        if (currentNode.left == null) {\r\n          currentNode.left = newNode;\r\n          break;\r\n        }\r\n        currentNode = currentNode.left;\r\n\r\n        continue;\r\n      } else {\r\n        if (value === currentNode.value) {\r\n          break;\r\n        } else {\r\n          if (currentNode.right == null) {\r\n            currentNode.right = newNode;\r\n            break;\r\n          }\r\n          currentNode = currentNode.right;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    setTree(tree);\r\n  }\r\n\r\n  useEffect(() => {\r\n    insert(5);\r\n    insert(2);\r\n    insert(3)\r\n    // insert(4);\r\n    insert(-5);\r\n    insert(6)\r\n    // insert(-3);\r\n    // insert(-6);\r\n    \r\n    // insert(-7)\r\n    // insert(8);\r\n    console.log(tree);\r\n  }, [tree]);\r\n\r\n  \r\n  function onSubmitHandler(event) {\r\n    event.preventDefault();\r\n    insert(Number(inputVal));\r\n    setInputVal(\"\");\r\n    console.log(tree);\r\n  }\r\n  function onChangeHandler(event) {\r\n    setInputVal(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Traverse node={tree}/>\r\n      {/* <hr />\r\n      <form onSubmit={onSubmitHandler} style={{ marginTop: \"20px\" }}>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"enter the value here\"\r\n          onChange={onChangeHandler}\r\n          value={inputVal}\r\n        />\r\n        <button type=\"submit\">Insert</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinaryTree;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASc,MAAMA,CAACL,KAAK,EAAE;IACrB,MAAMM,OAAO,GAAG;MACdL,IAAI,EAAE,IAAI;MACVD,KAAK,EAAEA,KAAK;MACZE,KAAK,EAAE;IACT,CAAC;IAED,IAAIJ,IAAI,CAACE,KAAK,KAAK,IAAI,EAAE;MACvBD,OAAO,CAAEQ,QAAQ,IAAK;QAAE,OAAO;UAAE,GAAGA,QAAQ;UAAEP,KAAK,EAAEA;QAAM,CAAC;MAAC,CAAC,CAAC;MAC/D;IACF;IACA,IAAIQ,WAAW,GAAGV,IAAI;IAEtB,OAAO,IAAI,EAAE;MACX,IAAIE,KAAK,GAAGQ,WAAW,CAACR,KAAK,EAAE;QAC7B,IAAIQ,WAAW,CAACP,IAAI,IAAI,IAAI,EAAE;UAC5BO,WAAW,CAACP,IAAI,GAAGK,OAAO;UAC1B;QACF;QACAE,WAAW,GAAGA,WAAW,CAACP,IAAI;QAE9B;MACF,CAAC,MAAM;QACL,IAAID,KAAK,KAAKQ,WAAW,CAACR,KAAK,EAAE;UAC/B;QACF,CAAC,MAAM;UACL,IAAIQ,WAAW,CAACN,KAAK,IAAI,IAAI,EAAE;YAC7BM,WAAW,CAACN,KAAK,GAAGI,OAAO;YAC3B;UACF;UACAE,WAAW,GAAGA,WAAW,CAACN,KAAK;UAC/B;QACF;MACF;IACF;IAEAH,OAAO,CAACD,IAAI,CAAC;EACf;EAEAN,SAAS,CAAC,MAAM;IACda,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,CAAC,CAAC;IACT;IACAA,MAAM,CAAC,CAAC,CAAC,CAAC;IACVA,MAAM,CAAC,CAAC,CAAC;IACT;IACA;;IAEA;IACA;IACAI,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAGV,SAASa,eAAeA,CAACC,KAAK,EAAE;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBR,MAAM,CAACS,MAAM,CAACX,QAAQ,CAAC,CAAC;IACxBC,WAAW,CAAC,EAAE,CAAC;IACfK,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACnB;EACA,SAASiB,eAAeA,CAACH,KAAK,EAAE;IAC9BR,WAAW,CAACQ,KAAK,CAACI,MAAM,CAAChB,KAAK,CAAC;EACjC;EAEA,oBACEL,OAAA;IAAAsB,QAAA,eACEtB,OAAA,CAACF,QAAQ;MAACyB,IAAI,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAWnB;AAEV;AAACzB,EAAA,CAxFQD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA0FnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}