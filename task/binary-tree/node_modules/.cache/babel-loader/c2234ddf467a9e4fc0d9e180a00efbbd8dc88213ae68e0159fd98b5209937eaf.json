{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\BinaryTree.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryTree() {\n  _s();\n  const [tree, setTree] = useState({\n    value: null,\n    left: null,\n    right: null\n  });\n  const [inputVal, setInputVal] = useState(\"\");\n  function insert(value) {\n    const newNode = {\n      left: null,\n      value: value,\n      right: null\n    };\n    let currentNode = tree;\n    while (true) {\n      if (value < currentNode.value) {\n        if (currentNode.left == null) {\n          currentNode.left = newNode;\n          break;\n        }\n        currentNode = currentNode.left;\n        continue;\n      } else {\n        if (value === currentNode.value) {\n          break;\n        } else {\n          if (currentNode.right == null) {\n            currentNode.right = newNode;\n            break;\n          }\n          currentNode = currentNode.right;\n          continue;\n        }\n      }\n    }\n    setTree(tree);\n  }\n  function setRoot(value) {\n    const newNode = {\n      left: null,\n      value: value,\n      right: null\n    };\n    if (tree.value === null) {\n      setTree({\n        value: value,\n        left: null,\n        right: null\n      });\n      return;\n    }\n  }\n  useEffect(() => {\n    setRoot(5);\n    insert(2);\n    insert(3);\n    // insert(4);\n    insert(6);\n    // insert(-3);\n    // insert(-6);\n    insert(-5);\n    // insert(-7)\n    // insert(8);\n    console.log(tree);\n  }, [tree]);\n  function traverse(node) {\n    if (node !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"20px\",\n            height: \"20px\",\n            marginLeft: \"50%\",\n            marginBottom: \"7px\",\n            border: \"2px solid black\",\n            borderRadius: \"5px\"\n          },\n          children: node.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: traverse(node.left)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: traverse(node.right)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    insert(Number(inputVal));\n    setInputVal(\"\");\n    console.log(tree);\n  }\n  function onChangeHandler(event) {\n    setInputVal(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: traverse(tree)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryTree, \"71sFcdaiUO1IPGDmo1YLUmLe66s=\");\n_c = BinaryTree;\nexport default BinaryTree;\nvar _c;\n$RefreshReg$(_c, \"BinaryTree\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","BinaryTree","_s","tree","setTree","value","left","right","inputVal","setInputVal","insert","newNode","currentNode","setRoot","console","log","traverse","node","children","style","width","height","marginLeft","marginBottom","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","marginRight","onSubmitHandler","event","preventDefault","Number","onChangeHandler","target","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/BinaryTree.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction BinaryTree() {\r\n  const [tree, setTree] = useState({\r\n    value: null,\r\n    left: null,\r\n    right: null,\r\n  });\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n\r\n  function insert(value) {\r\n    const newNode = {\r\n      left: null,\r\n      value: value,\r\n      right: null,\r\n    };\r\n\r\n    let currentNode = tree;\r\n\r\n    while (true) {\r\n      if (value < currentNode.value) {\r\n        if (currentNode.left == null) {\r\n          currentNode.left = newNode;\r\n          break;\r\n        }\r\n        currentNode = currentNode.left;\r\n\r\n        continue;\r\n      } else {\r\n        if (value === currentNode.value) {\r\n          break;\r\n        } else {\r\n          if (currentNode.right == null) {\r\n            currentNode.right = newNode;\r\n            break;\r\n          }\r\n          currentNode = currentNode.right;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    setTree(tree);\r\n  }\r\n  function setRoot(value) {\r\n    const newNode = {\r\n      left: null,\r\n      value: value,\r\n      right: null,\r\n    };\r\n    if (tree.value === null) {\r\n      setTree({ value: value, left: null, right: null })\r\n      return\r\n  }\r\n}\r\n  useEffect(() => {\r\n    setRoot(5);\r\n    insert(2);\r\n    insert(3)\r\n    // insert(4);\r\n    insert(6)\r\n    // insert(-3);\r\n    // insert(-6);\r\n    insert(-5);\r\n    // insert(-7)\r\n    // insert(8);\r\n    console.log(tree);\r\n  }, [tree]);\r\n\r\n  function traverse(node) {\r\n    if (node !== null) {\r\n      return (\r\n        <div>\r\n          <div\r\n            style={{\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              marginLeft: \"50%\",\r\n              marginBottom: \"7px\",\r\n              border: \"2px solid black\",\r\n              borderRadius: \"5px\",\r\n            }}>\r\n            {node.value}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-evenly\",\r\n            }}>\r\n            <div style={{ marginRight: \"5px\" }}>{traverse(node.left)}</div>\r\n            <div>{traverse(node.right)}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  function onSubmitHandler(event) {\r\n    event.preventDefault();\r\n    insert(Number(inputVal));\r\n    setInputVal(\"\");\r\n    console.log(tree);\r\n  }\r\n  function onChangeHandler(event) {\r\n    setInputVal(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {traverse(tree)}\r\n      {/* <hr />\r\n      <form onSubmit={onSubmitHandler} style={{ marginTop: \"20px\" }}>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"enter the value here\"\r\n          onChange={onChangeHandler}\r\n          value={inputVal}\r\n        />\r\n        <button type=\"submit\">Insert</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinaryTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}