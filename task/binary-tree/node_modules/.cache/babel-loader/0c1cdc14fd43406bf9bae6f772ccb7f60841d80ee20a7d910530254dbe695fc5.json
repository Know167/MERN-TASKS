{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\BinaryTree.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryTree() {\n  _s();\n  const [tree, setTree] = useState({\n    value: 1,\n    left: null,\n    right: null\n  });\n  useEffect(() => {\n    insert(4);\n    insert(3);\n    insert(8);\n    insert(12);\n    insert(1);\n    insert(23);\n    insert(11);\n    console.log(tree);\n  }, [tree, insert]);\n  function traverse(node) {\n    if (node !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: traverse(node.left)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: traverse(node.right)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: traverse(tree)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryTree, \"92UDoKgkWhehK1ZnzXBWGqmzYPk=\");\n_c = BinaryTree;\nexport default BinaryTree;\nvar _c;\n$RefreshReg$(_c, \"BinaryTree\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","BinaryTree","_s","tree","setTree","value","left","right","insert","console","log","traverse","node","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/BinaryTree.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction BinaryTree() {\r\n  const [tree, setTree] = useState({\r\n    value: 1,\r\n    left: null,\r\n    right: null,\r\n  });\r\n  \r\n\r\n  \r\nuseEffect(() => {\r\n  insert(4);\r\n  insert(3);\r\n  insert(8);\r\n  insert(12);\r\n  insert(1);\r\n  insert(23);\r\n  insert(11);\r\n  console.log(tree);\r\n}, [tree, insert]);\r\nfunction traverse(node) {\r\n  if (node !== null) {\r\n    return (\r\n      <div>\r\n        <div>{node.value}</div>\r\n        <div>{traverse(node.left)}</div>\r\n        <div>{traverse(node.right)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      { traverse(tree)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinaryTree;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EAIJV,SAAS,CAAC,MAAM;IACdW,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,EAAE,CAAC;IACVA,MAAM,CAAC,CAAC,CAAC;IACTA,MAAM,CAAC,EAAE,CAAC;IACVA,MAAM,CAAC,EAAE,CAAC;IACVC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,EAAEK,MAAM,CAAC,CAAC;EAClB,SAASG,QAAQA,CAACC,IAAI,EAAE;IACtB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,oBACEZ,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAMD,IAAI,CAACP;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACvBjB,OAAA;UAAAa,QAAA,EAAMF,QAAQ,CAACC,IAAI,CAACN,IAAI;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAChCjB,OAAA;UAAAa,QAAA,EAAMF,QAAQ,CAACC,IAAI,CAACL,KAAK;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B;IAEV;EACF;EAEE,oBACEjB,OAAA;IAAAa,QAAA,EACIF,QAAQ,CAACR,IAAI;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACZ;AAEV;AAACf,EAAA,CApCQD,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}