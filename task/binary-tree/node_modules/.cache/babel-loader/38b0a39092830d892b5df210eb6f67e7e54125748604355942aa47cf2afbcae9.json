{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\Stack.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stack() {\n  _s();\n  useEffect(() => {\n    function Node(value) {\n      this.value = value;\n      // this.left = null;\n      // this.right = null;\n    }\n\n    function insertNode(Tree, value) {\n      var node = Tree,\n        key;\n      while (node.value !== value) {\n        key = value < node.value ? \"left\" : \"right\";\n        if (!node[key]) {\n          node[key] = new Node(value);\n          break;\n        }\n        node = node[key];\n      }\n      return Tree;\n    }\n    var array = [8, 10, 12, 5, 3, 6];\n    var Tree = array.reduce((t, v) => t ? insertNode(t, v) : new Node(v), null);\n    traverse(Tree);\n  }, []);\n  function traverse(node) {\n    console.log(node);\n    if (node !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"20px\",\n            height: \"20px\",\n            marginLeft: \"50%\",\n            marginBottom: \"7px\",\n            border: \"2px solid black\",\n            borderRadius: \"5px\"\n          },\n          children: node.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: traverse(node.left)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: traverse(node.right)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\n_s(Stack, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Stack;\nexport default Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Stack","_s","Node","value","insertNode","Tree","node","key","array","reduce","t","v","traverse","console","log","children","style","width","height","marginLeft","marginBottom","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","justifyContent","marginRight","left","right","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/Stack.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Stack() {\r\n  useEffect(() => {\r\n    function Node(value) {\r\n      this.value = value;\r\n      // this.left = null;\r\n      // this.right = null;\r\n    }\r\n\r\n    function insertNode(Tree, value) {\r\n      var node = Tree,\r\n        key;\r\n      while (node.value !== value) {\r\n        key = value < node.value ? \"left\" : \"right\";\r\n        if (!node[key]) {\r\n          node[key] = new Node(value);\r\n          break;\r\n        }\r\n        node = node[key];\r\n      }\r\n      return Tree;\r\n    }\r\n\r\n    var array = [8, 10, 12, 5, 3, 6];\r\n    var Tree = array.reduce(\r\n      (t, v) => (t ? insertNode(t, v) : new Node(v)),\r\n      null\r\n    );\r\n    traverse(Tree);\r\n  }, []);\r\n function traverse(node) {\r\n        console.log(node)\r\n      if (node !== null) {\r\n        return (\r\n          <div>\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                marginLeft: \"50%\",\r\n                marginBottom: \"7px\",\r\n                border: \"2px solid black\",\r\n                borderRadius: \"5px\",\r\n              }}>\r\n              {node.value}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n              }}>\r\n              <div style={{ marginRight: \"5px\" }}>{traverse(node.left)}</div>\r\n              <div>{traverse(node.right)}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  \r\n}\r\n\r\nexport default Stack;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACfL,SAAS,CAAC,MAAM;IACd,SAASM,IAAIA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB;MACA;IACF;;IAEA,SAASC,UAAUA,CAACC,IAAI,EAAEF,KAAK,EAAE;MAC/B,IAAIG,IAAI,GAAGD,IAAI;QACbE,GAAG;MACL,OAAOD,IAAI,CAACH,KAAK,KAAKA,KAAK,EAAE;QAC3BI,GAAG,GAAGJ,KAAK,GAAGG,IAAI,CAACH,KAAK,GAAG,MAAM,GAAG,OAAO;QAC3C,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,EAAE;UACdD,IAAI,CAACC,GAAG,CAAC,GAAG,IAAIL,IAAI,CAACC,KAAK,CAAC;UAC3B;QACF;QACAG,IAAI,GAAGA,IAAI,CAACC,GAAG,CAAC;MAClB;MACA,OAAOF,IAAI;IACb;IAEA,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,IAAIH,IAAI,GAAGG,KAAK,CAACC,MAAM,CACrB,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,GAAGN,UAAU,CAACM,CAAC,EAAEC,CAAC,CAAC,GAAG,IAAIT,IAAI,CAACS,CAAC,CAAE,EAC9C,IAAI,CACL;IACDC,QAAQ,CAACP,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACP,SAASO,QAAQA,CAACN,IAAI,EAAE;IACjBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACnB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,oBACEP,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UACEiB,KAAK,EAAE;YACLC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,UAAU,EAAE,KAAK;YACjBC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,iBAAiB;YACzBC,YAAY,EAAE;UAChB,CAAE;UAAAP,QAAA,EACDT,IAAI,CAACH;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACP,eACN3B,OAAA;UACEiB,KAAK,EAAE;YACLW,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,KAAK;YACpBC,cAAc,EAAE;UAClB,CAAE;UAAAd,QAAA,gBACFhB,OAAA;YAAKiB,KAAK,EAAE;cAAEc,WAAW,EAAE;YAAM,CAAE;YAAAf,QAAA,EAAEH,QAAQ,CAACN,IAAI,CAACyB,IAAI;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAC/D3B,OAAA;YAAAgB,QAAA,EAAMH,QAAQ,CAACN,IAAI,CAAC0B,KAAK;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAEV;EACF;AAEJ;AAACzB,EAAA,CA3DQD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA6Dd,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}