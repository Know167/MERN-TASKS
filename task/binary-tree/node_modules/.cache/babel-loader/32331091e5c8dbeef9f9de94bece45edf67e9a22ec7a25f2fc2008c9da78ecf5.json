{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\BinaryTree.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinaryTree() {\n  _s();\n  const [tree, setTree] = useState({\n    value: 1,\n    left: null,\n    right: null\n  });\n  const [inputVal, setInputVal] = useState('');\n  function insert(value) {\n    const newNode = {\n      left: null,\n      value: value,\n      right: null\n    };\n    if (tree === null) {\n      setTree(newNode);\n      return;\n    }\n    let currentNode = tree;\n    while (true) {\n      if (value < currentNode.value) {\n        if (currentNode.left == null) {\n          currentNode.left = newNode;\n          break;\n        }\n        currentNode = currentNode.left;\n      } else {\n        if (value === currentNode.value) {\n          break;\n        } else {\n          if (currentNode.right == null) {\n            currentNode.right = newNode;\n            break;\n          }\n          currentNode = currentNode.right;\n        }\n      }\n    }\n    setTree(tree);\n  }\n  function traverse(node) {\n    if (node !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: node.left,\n          children: traverse(node.left)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: traverse(node.right)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    }\n  }\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    insert(Number(inputVal));\n    setInputVal('');\n    console.log(tree);\n  }\n  function onChangeHandler(event) {\n    setInputVal(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [traverse(tree), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      style: {\n        'marginTop': '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"enter the value you want to insert\",\n        onChange: onChangeHandler,\n        value: inputVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(BinaryTree, \"/Yznw3jaih4VLzl0XKydVkGR9vo=\");\n_c = BinaryTree;\nexport default BinaryTree;\nvar _c;\n$RefreshReg$(_c, \"BinaryTree\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","BinaryTree","_s","tree","setTree","value","left","right","inputVal","setInputVal","insert","newNode","currentNode","traverse","node","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmitHandler","event","preventDefault","Number","console","log","onChangeHandler","target","onSubmit","style","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/BinaryTree.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction BinaryTree() {\r\n  const [tree, setTree] = useState({\r\n    value: 1,\r\n    left: null,\r\n    right: null,\r\n  });\r\n  const [inputVal, setInputVal] = useState('');\r\n\r\n\r\n  function insert(value) {\r\n    const newNode = {\r\n      left: null,\r\n      value: value,\r\n      right: null,\r\n    };\r\n\r\n    if (tree === null) {\r\n      setTree(newNode);\r\n      return;\r\n    }\r\n\r\n    let currentNode = tree;\r\n\r\n    while (true) {\r\n      if (value < currentNode.value) {\r\n        if (currentNode.left == null) {\r\n          currentNode.left = newNode;\r\n          break;\r\n        }\r\n        currentNode = currentNode.left;\r\n      } else {\r\n        if (value === currentNode.value) {\r\n          break;\r\n        } else {\r\n          if (currentNode.right == null) {\r\n            currentNode.right = newNode;\r\n            break;\r\n          }\r\n          currentNode = currentNode.right;\r\n        }\r\n      }\r\n    }\r\n\r\n    setTree(tree);\r\n  }\r\n\r\nfunction traverse(node) {\r\n  if (node !== null) {\r\n    return (\r\n      <div>\r\n        <div>{node.value}</div>\r\n        <div className={node.left}>{traverse(node.left)}</div>\r\n        <div>{traverse(node.right)}</div>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n  function onSubmitHandler(event) {\r\n    event.preventDefault();\r\n    insert(Number(inputVal));\r\n    setInputVal('');\r\n    console.log(tree);\r\n  }\r\n  function onChangeHandler(event) {\r\n    setInputVal(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {traverse(tree)}\r\n      <hr/>\r\n      <form onSubmit={onSubmitHandler} style={{ 'marginTop':'20px' }} >\r\n        <input type=\"number\" placeholder=\"enter the value you want to insert\" onChange={onChangeHandler} value={inputVal } />\r\n          <button type=\"submit\">Insert</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinaryTree;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG5C,SAASY,MAAMA,CAACL,KAAK,EAAE;IACrB,MAAMM,OAAO,GAAG;MACdL,IAAI,EAAE,IAAI;MACVD,KAAK,EAAEA,KAAK;MACZE,KAAK,EAAE;IACT,CAAC;IAED,IAAIJ,IAAI,KAAK,IAAI,EAAE;MACjBC,OAAO,CAACO,OAAO,CAAC;MAChB;IACF;IAEA,IAAIC,WAAW,GAAGT,IAAI;IAEtB,OAAO,IAAI,EAAE;MACX,IAAIE,KAAK,GAAGO,WAAW,CAACP,KAAK,EAAE;QAC7B,IAAIO,WAAW,CAACN,IAAI,IAAI,IAAI,EAAE;UAC5BM,WAAW,CAACN,IAAI,GAAGK,OAAO;UAC1B;QACF;QACAC,WAAW,GAAGA,WAAW,CAACN,IAAI;MAChC,CAAC,MAAM;QACL,IAAID,KAAK,KAAKO,WAAW,CAACP,KAAK,EAAE;UAC/B;QACF,CAAC,MAAM;UACL,IAAIO,WAAW,CAACL,KAAK,IAAI,IAAI,EAAE;YAC7BK,WAAW,CAACL,KAAK,GAAGI,OAAO;YAC3B;UACF;UACAC,WAAW,GAAGA,WAAW,CAACL,KAAK;QACjC;MACF;IACF;IAEAH,OAAO,CAACD,IAAI,CAAC;EACf;EAEF,SAASU,QAAQA,CAACC,IAAI,EAAE;IACtB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,oBACEd,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAMD,IAAI,CAACT;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACvBnB,OAAA;UAAKoB,SAAS,EAAEN,IAAI,CAACR,IAAK;UAAAS,QAAA,EAAEF,QAAQ,CAACC,IAAI,CAACR,IAAI;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACtDnB,OAAA;UAAAe,QAAA,EAAMF,QAAQ,CAACC,IAAI,CAACP,KAAK;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B;IAEV;EACA;EACA,SAASE,eAAeA,CAACC,KAAK,EAAE;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBb,MAAM,CAACc,MAAM,CAAChB,QAAQ,CAAC,CAAC;IACxBC,WAAW,CAAC,EAAE,CAAC;IACfgB,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;EACnB;EACA,SAASwB,eAAeA,CAACL,KAAK,EAAE;IAC9Bb,WAAW,CAACa,KAAK,CAACM,MAAM,CAACvB,KAAK,CAAC;EACjC;EAEA,oBACEL,OAAA;IAAAe,QAAA,GACGF,QAAQ,CAACV,IAAI,CAAC,eACfH,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACLnB,OAAA;MAAM6B,QAAQ,EAAER,eAAgB;MAACS,KAAK,EAAE;QAAE,WAAW,EAAC;MAAO,CAAE;MAAAf,QAAA,gBAC7Df,OAAA;QAAO+B,IAAI,EAAC,QAAQ;QAACC,WAAW,EAAC,oCAAoC;QAACC,QAAQ,EAAEN,eAAgB;QAACtB,KAAK,EAAEG;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnHnB,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAhB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACjB,EAAA,CA7EQD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA+EnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}