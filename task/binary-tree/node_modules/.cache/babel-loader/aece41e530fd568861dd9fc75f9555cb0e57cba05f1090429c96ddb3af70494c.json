{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jatin\\\\Documents\\\\HTML PROJECTS\\\\mern-exercise\\\\task\\\\binary-tree\\\\src\\\\App.js\";\n// import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [Nodes, setNodes] = useState([1, 2, 3]);\n  // const tree = { val: null, left: null, right: null };\n  // const index = tree;\n  // function root(val) {\n  //     tree.val = val;\n  //   }\n\n  // function add(val) {\n\n  // }\n  // function setLeft(key, parent) {\n  //   if (tree[parent] == null) {\n  //     console.log(`Can't set child at ${parent * 2 + 1}, no parent found <br>`);\n  //   } else {\n  //     tree[parent * 2 + 1] = key;\n  //   }\n  // }\n\n  // function setRight(key, parent) {\n  //   if (tree[parent] == null) {\n  //     console.log(`Can't set child at ${parent * 2 + 2}, no parent found <br>`);\n  //   } else {\n  //     tree[parent * 2 + 2] = key;\n  //   }\n  // }\n\n  // function printTree() {\n  //   for (let i = 0; i < 10; i++) {\n  //     if (tree[i] != null) {\n  //       console.log(tree[i]);\n  //     } else {\n  //       console.log(\"-\");\n  //     }\n  //   }\n  // }\n\n  // root(10);\n  // printTree();\n\n  // const addValue = (event) => {\n  //   event.preventDefault();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BinaryTree, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","className","children","BinaryTree","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jatin/Documents/HTML PROJECTS/mern-exercise/task/binary-tree/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n  // const [Nodes, setNodes] = useState([1, 2, 3]);\n  // const tree = { val: null, left: null, right: null };\n  // const index = tree;\n  // function root(val) {\n  //     tree.val = val;\n  //   }\n  \n\n  // function add(val) {\n    \n  // }\n  // function setLeft(key, parent) {\n  //   if (tree[parent] == null) {\n  //     console.log(`Can't set child at ${parent * 2 + 1}, no parent found <br>`);\n  //   } else {\n  //     tree[parent * 2 + 1] = key;\n  //   }\n  // }\n\n  // function setRight(key, parent) {\n  //   if (tree[parent] == null) {\n  //     console.log(`Can't set child at ${parent * 2 + 2}, no parent found <br>`);\n  //   } else {\n  //     tree[parent * 2 + 2] = key;\n  //   }\n  // }\n\n  // function printTree() {\n  //   for (let i = 0; i < 10; i++) {\n  //     if (tree[i] != null) {\n  //       console.log(tree[i]);\n  //     } else {\n  //       console.log(\"-\");\n  //     }\n  //   }\n  // }\n\n  // root(10);\n  // printTree();\n\n  // const addValue = (event) => {\n  //   event.preventDefault();\n  // };\n\n\n\n      \n  return (\n    <div className=\"App\">\n      {/* {Nodes.map((item) => ( */}\n      {/* ))} */}\n      {/* <form onSubmit={addValue}>\n        <input type=\"text\" name=\"value\" id=\"value\" />\n        <button type=\"submit\">Add</button>\n      </form> */}\n      <BinaryTree/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA,OAAO,WAAW;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAKA,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAOlBH,OAAA,CAACI,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEV;AAACC,EAAA,GA3DQR,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}